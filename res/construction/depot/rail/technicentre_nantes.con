local paramsutil = require "paramsutil"
local constructionutil = require "constructionutil"

--Begin Generated
local generatedData = {
	["base"] = {
		models = {
			["depot/rail/technicentre_nantes.mdl"] = {
				{ 1.00000, 0.00000, 0.00000, 0.00000, 0.00000, 1.00000, 0.00000, 0.00000, 0.00000, 0.00000, 1.00000, 0.00000, 0.00000, 0.00000, 0.00000, 1.00000, },
			},
		},
	},
}
--End Generated
function data()
	local config = {
		trackTypes = { "standard.lua", "high_speed.lua" },
	}

return {
	type = "RAIL_DEPOT",
	description = {
		name = _("Technicentre Nantes"),
		icon = "ui/depot/rail/technicentre_nantes.tga"
	},
	categories = {"Gares Ouest-Etat"},
	availability = {

	},
	params = {
		paramsutil.makeTrackTypeParam(),
		paramsutil.makeTrackCatenaryParam()
	},
	updateFn = function(params)
		local result = { }

		result.models = { 	}



		local height = params.state.track.railBase + params.state.track.railHeight
		result.edgeLists = {
			{
				type = "TRACK",
				params = {
					type = config.trackTypes[params.trackType and params.trackType + 1 or 0],
					catenary = params.catenary == 1
				},
				edges = {
					{ { -28.049999237061, 74.60, height }, 		{ 0, -159.6, .0 } },
					{ { -28.049999237061, -85, height }, 	{ 0, -159.6, .0 } },

					{ { -20.5, 74.60, height }, 		{ 0, -159.6, .0 } },
                    { { -20.5, -85, height }, 	{ 0, -159.6, .0 } },

                    { { -13.5, 74.60, height }, 		{ 0, -159.6, .0 } },
                    { { -13.5, -85, height }, 	{ 0, -159.6, .0 } },

                    { { -2.5, 74.60, height }, 		{ 0, -159.6, .0 } },
                    { { -2.5, -85, height }, 	{ 0, -159.6, .0 } },

                    { { 5.2, 74.60, height }, 		{ 0, -159.6, .0 } },
                    { { 5.2, -85, height }, 	{ 0, -159.6, .0 } },

                    { { 12.9, 74.60, height }, 		{ 0, -159.6, .0 } },
                    { { 12.9, -85, height }, 	{ 0, -159.6, .0 } },

                    { { 21.2, 74.60, height }, 		{ 0, -159.6, .0 } },
                    { { 21.2, -85, height }, 	{ 0, -159.6, .0 } },
				},
				snapNodes = { 1,3,5,7,9,11,13 }
			}
		}

		constructionutil.addModelsAndGroups(params, generatedData["base"], result)

		result.terrainAlignmentLists = {
		    {
		        type = "GREATER",
		        faces = {},
		        slopeLow = 0.2,
                slopeHigh = 0.2,
                optional = false,
		    }
		}

        result.groundFaces = {
        	{
        	face = { { -0.01, -0.01, 0 }, { 0.01, -0.01, 0 }, { 0.01, 0.01, 0 } },
        	modes = {
        		{
        		  type = "FILL",
        		  key = "industry_floor.lua"
        		}
        	},
        	loop = true,
        	alignmentOffsetMode = "OBJECT",
        	alignmentDirMode = "OBJECT",
        	alignmentOffset = { -2.0, -1.0 },
        	},
        }

		result.cost = 18000

		return result
	end
}

end
